import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;

public class CopyEjbModuleContents {
    public static void main(String[] args) {
        String sourcePath = "path_to_source_directory"; // Replace with your source directory path
        String destinationPath = "path_to_destination_directory"; // Replace with your destination directory path

        File sourceDirectory = new File(sourcePath);
        File destinationDirectory = new File(destinationPath);

        if (!sourceDirectory.exists() || !sourceDirectory.isDirectory()) {
            System.out.println("Source directory does not exist or is not a directory.");
            return;
        }

        if (!destinationDirectory.exists() || !destinationDirectory.isDirectory()) {
            System.out.println("Destination directory does not exist or is not a directory.");
            return;
        }

        copyEjbModuleContentsRecursively(sourceDirectory, destinationDirectory);
    }

    private static void copyEjbModuleContentsRecursively(File sourceDir, File destDir) {
        File[] files = sourceDir.listFiles();

        if (files != null) {
            for (File file : files) {
                if (file.isDirectory()) {
                    if (file.getName().equals("ejbModule")) {
                        copyFolderContents(file, destDir);
                    } else {
                        copyEjbModuleContentsRecursively(file, destDir);
                    }
                }
            }
        }
    }

    private static void copyFolderContents(File source, File destination) {
        File[] files = source.listFiles();

        if (files != null) {
            for (File file : files) {
                if (file.isDirectory()) {
                    copyFolderContents(file, new File(destination, file.getName()));
                } else {
                    try {
                        Files.copy(file.toPath(), new File(destination, file.getName()).toPath(), StandardCopyOption.REPLACE_EXISTING);
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}
